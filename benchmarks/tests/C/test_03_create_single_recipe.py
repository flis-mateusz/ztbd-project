import datetime
import random

from benchmarks.core.base_test import BasePerformanceTest


class CreateSingleRecipeTest(BasePerformanceTest):
    def __init__(self):
        super().__init__(
            description="INSERT jednego przepisu (FK → user 1, słowniki ID 1)",
            operation="CREATE")

    _vals = {
        "id_user": 1,
        "title": "'Nowy przepis'",
        "description": "'Autogenerated'",
        "cook_time": random.randint(10, 240),
        "serving": random.randint(1, 8),
        "views": 0,
        "rating": 0,
        "id_cuisine": 1,
        "id_diet": 1,
        "id_difficulty": 1,
        "id_meal_type": 1,
    }

    def test_mysql(self):
        sql = (
            "INSERT INTO recipes "
            "(id_user,title,description,created_at,cook_time,serving_size,views,rating,"
            " id_cuisine,id_diet,id_difficulty,id_meal_type) VALUES "
            f"({self._vals['id_user']},{self._vals['title']},{self._vals['description']},"
            " NOW(),"
            f"{self._vals['cook_time']},{self._vals['serving']},{self._vals['views']},"
            f"{self._vals['rating']},{self._vals['id_cuisine']},{self._vals['id_diet']},"
            f"{self._vals['id_difficulty']},{self._vals['id_meal_type']});"
        )
        cur = self._mysql.cursor()
        cur.execute(sql)
        cur.close()
        return 1

    def test_postgres(self):
        sql = (
            "INSERT INTO recipes "
            "(id_user,title,description,created_at,cook_time,serving_size,views,rating,"
            " id_cuisine,id_diet,id_difficulty,id_meal_type) VALUES "
            f"({self._vals['id_user']},{self._vals['title']},{self._vals['description']},"
            " NOW(),"
            f"{self._vals['cook_time']},{self._vals['serving']},{self._vals['views']},"
            f"{self._vals['rating']},{self._vals['id_cuisine']},{self._vals['id_diet']},"
            f"{self._vals['id_difficulty']},{self._vals['id_meal_type']});"
        )
        cur = self._postgres.cursor()
        cur.execute(sql)
        cur.close()
        return 1

    def test_mongo(self, db):
        rid = db.recipes.estimated_document_count() + 1
        doc = {
            "id": rid,
            "id_user": 1,
            "title": "Nowy przepis",
            "description": "Autogenerated",
            "created_at": datetime.datetime.utcnow(),
            "cook_time": random.randint(10, 240),
            "serving_size": random.randint(1, 8),
            "views": 0,
            "rating": 0,
            "id_cuisine": 1,
            "id_diet": 1,
            "id_difficulty": 1,
            "id_meal_type": 1
        }
        return db.recipes.insert_one(doc).inserted_id
